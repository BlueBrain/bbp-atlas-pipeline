
Snakemake - Cell Atlas Pipeline

nabil.alibou@epfl.ch
jonathan.lurie@epfl.ch

>help : prints help comments for Snakefile
>fetch_ccf_brain_region_hierarchy : fetch the hierarchy file, originally called 1.json
>fetch_brain_parcellation_ccfv2 :  fetch the CCF v2 brain parcellation volume in the given resolution
>fetch_fiber_parcellation_ccfv2 : fetch the CCF v2 fiber parcellation volume in the given resolution
>fetch_brain_parcellation_ccfv3 : fetch the CCF v3 brain parcellation volume in the given resolution
>fetch_brain_template : fetch the CCF v3 brain average template volume in the given resolution
>fetch_nissl_stained_volume : fetch the CCF nissl stained volume in the given resolution
>fetch_corrected_nissl_stained_volume : fetch the corrected nissl stained volume in the given resolution
>fetch_annotation_stack_ccfv2_coronal : fetch the CCFv2 annotation coronal image stack stack
>fetch_nissl_stack_ccfv2_coronal : fetch the CCFv2 nissl coronal image stack stack
>combine_v2_annotations : Generate and save the combined annotation file
>combine_v2v3_annotations : Generate and save the combined annotation file
 =========================================================================================
 ============================== CELL DENSITY PIPELINE PART 1 =============================
 =========================================================================================
## TO DO: replace all the fetch 'genes' by one rule using wildcard : ####
# WILDCARD SUCCESSFUL TEST:
#>fetch_glia_gene : fetch all the gene expression volumes using wildcard
>fetch_gene_gad : fetch the gene expression volume corresponding to the genetic marker gad
>fetch_gene_nrn1 : fetch the gene expression volume corresponding to the genetic marker nrn1
>fetch_gene_aldh1l1 : fetch the gene expression volume corresponding to the genetic marker aldh1l1
>fetch_gene_cnp : fetch the gene expression volume corresponding to the genetic marker cnp
>fetch_gene_mbp : fetch the gene expression volume corresponding to the genetic marker mbp
>fetch_gene_gfap : fetch the gene expression volume corresponding to the genetic marker gfap
>fetch_gene_s100b : fetch the gene expression volume corresponding to the genetic marker s100b
>fetch_gene_tmem119 : fetch the gene expression volume corresponding to the genetic marker tmem119
>fetch_gene_pv : fetch the gene expression volume corresponding to the genetic marker pv
>fetch_gene_pv_correctednissl : fetch the gene expression volume corresponding to the genetic marker pv
>fetch_gene_sst : fetch the gene expression volume corresponding to the genetic marker sst
>fetch_gene_sst_correctednissl : fetch the gene expression volume corresponding to the genetic marker sst
>fetch_gene_vip : fetch the gene expression volume corresponding to the genetic marker vip
>fetch_gene_vip_correctednissl : fetch the gene expression volume corresponding to the genetic marker vip
>fetch_gene_gad67 : fetch the gene expression volume corresponding to the genetic marker gad67
>fetch_gene_gad67_correctednissl : fetch the gene expression volume corresponding to the genetic marker gad67
>fetch_isocortex_metadata : fetch isocortex metadata
>fetch_isocortex_23_metadata : fetch isocortex 23 metadata
 =========================================================================================
 =============================== ANNOTATION PIPELINE PART 1.1 ============================
 =========================================================================================
>direction_vectors_isocortex_ccfv2 : Compute a volume with 3 elements per voxel that are the direction in Euler angles (x, y, z) of the neurons. This uses Regiodesics under the hood. The output is only for the top regions of the isocortex.
>direction_vectors_isocortex_ccfv3 : Compute a volume with 3 elements per voxel that are the direction in Euler angles (x, y, z) of the neurons. This uses Regiodesics under the hood. The output is only for the top regions of the isocortex.
>direction_vectors_isocortex_hybrid : Compute a volume with 3 elements per voxel that are the direction in Euler angles (x, y, z) of the neurons. This uses Regiodesics under the hood. The output is only for the top regions of the isocortex.
>direction_vectors_cerebellum : Compute a volume with 3 elements per voxel that are the direction in Euler angles (x, y, z) of the neurons. This uses Regiodesics under the hood. The output is only for some regions of the cerebellum.
>interpolate_direction_vectors_isocortex_ccfv2 : Interpolate the [NaN, NaN, NaN] direction vectors by non-[NaN, NaN, NaN] ones.
>interpolate_direction_vectors_isocortex_ccfv3 : Interpolate the [NaN, NaN, NaN] direction vectors by non-[NaN, NaN, NaN] ones.
>split_isocortex_layer_23_ccfv2 : Refine annotations by splitting brain regions
>split_isocortex_layer_23_ccfv3 : Refine annotations by splitting brain regions
>split_isocortex_layer_23_hybrid : Refine annotations by splitting brain regions
>combine_markers_ccfv2 : Generate and save the combined glia files and the global celltype scaling factors
>combine_markers_ccfv2_l23split : Generate and save the combined glia files and the global celltype scaling factors
>combine_markers_hybrid : Generate and save the combined glia files and the global celltype scaling factors
>combine_markers_hybrid_l23split : Generate and save the combined glia files and the global celltype scaling factors
>extract_color_map : Extract the mapping of colors to structure ids
>svg_to_png : Convert svg files into png files
>compute_average_soma_radius : Compute the overall mouse brain cell density
>cell_density_ccfv2 : Compute the overall mouse brain cell density
>cell_density_hybrid : Compute the overall mouse brain cell density
>cell_density_ccfv2_l23split_correctednissl : Compute the overall mouse brain cell density
>cell_density_ccfv2_correctednissl : Compute the overall mouse brain cell density
>cell_density_hybrid_l23split_correctednissl : Compute the overall mouse brain cell density
>glia_cell_densities_ccfv2 : Compute and save the glia cell densities
>glia_cell_densities_ccfv2_correctednissl : Compute and save the glia cell densities
>glia_cell_densities_ccfv2_l23split_correctednissl : Compute and save the glia cell densities
>glia_cell_densities_hybrid : Compute and save the glia cell densities
>glia_cell_densities_hybrid_l23split_correctednissl : Compute and save the glia cell densities
>inhibitory_excitatory_neuron_densities_hybrid : Compute the inhibitory and excitatory neuron densities
>inhibitory_excitatory_neuron_densities_ccfv2 : Compute the inhibitory and excitatory neuron densities
>inhibitory_excitatory_neuron_densities_ccfv2_correctednissl : Compute the inhibitory and excitatory neuron densities
 =========================================================================================
 =============================== ANNOTATION PIPELINE PART 1.2 ============================
 =========================================================================================
>orientation_field_ccfv2 : Turn direction vectors into quaternions interpreted as 3D orientations
>orientation_field_ccfv3 : Turn direction vectors into quaternions interpreted as 3D orientations
>orientation_field_hybrid : Turn direction vectors into quaternions interpreted as 3D orientations
>placement_hints_isocortex_ccfv2_l23split : Generate and save the placement hints of different regions of the AIBS mouse brain
>placement_hints_isocortex_ccfv3_l23split : Generate and save the placement hints of different regions of the AIBS mouse brain
 =========================================================================================
 ============================== CELL DENSITY PIPELINE PART 2 =============================
 =========================================================================================
======== Optimized inhibitory neuron densities and mtypes ========
>compile_densities_measurements : Compile the cell density related measurements of mmc3.xlsx and `gaba_papers.xsls` into a CSV file.
>average_densities_ccfv2 : Compute cell densities based on measurements and AIBS region volumes.
>average_densities_ccfv2_correctednissl : Compute cell densities based on measurements and AIBS region volumes.
>average_densities_ccfv2_l23split_correctednissl : Compute cell densities based on measurements and AIBS region volumes.
>average_densities_hybrid_l23split_correctednissl : Compute cell densities based on measurements and AIBS region volumes.
>fit_average_densities_ccfv2 : Estimate average cell densities of brain regions.
>fit_average_densities_ccfv2_correctednissl : Estimate average cell densities of brain regions.
>fit_average_densities_ccfv2_l23split_correctednissl : Estimate average cell densities of brain regions.
>fit_average_densities_hybrid_l23split_correctednissl : Estimate average cell densities of brain regions.
>inhibitory_neuron_densities_linprog_ccfv2_correctednissl : Create inhibitory neuron densities for the cell types in the csv file containing the fitted densities. Use default algorithm 'lingprog'.
>inhibitory_neuron_densities_preserveprop_ccfv2_correctednissl : Create inhibitory neuron densities for the cell types in the csv file containing the fitted densities. Use algorithm 'keep-proportions'.
>inhibitory_neuron_densities_linprog_ccfv2_l23split_correctednissl : Create inhibitory neuron densities for the cell types in the csv file containing the fitted densities. Use default algorithm 'lingprog'.
>inhibitory_neuron_densities_linprog_hybrid_l23split_correctednissl : Create inhibitory neuron densities for the cell types in the csv file containing the fitted densities. Use default algorithm 'lingprog'.
>create_mtypes_densities_from_profile_ccfv2_correctednissl : Create neuron density nrrd files for the mtypes listed in the mapping tsv file.
>create_mtypes_densities_from_profile_hybrid_l23split_correctednissl : Create neuron density nrrd files for the mtypes listed in the mapping tsv file.
>create_mtypes_densities_from_probability_map_ccfv2_correctednissl : Create neuron density nrrd files for the mtypes listed in the probability mapping csv file.
>create_mtypes_densities_from_probability_map_ccfv2_l23split_correctednissl : Create neuron density nrrd files for the mtypes listed in the probability mapping csv file.
>create_mtypes_densities_from_probability_map_hybrid_l23split_correctednissl : Create neuron density nrrd files for the mtypes listed in the probability mapping csv file.
 =========================================================================================
 ======================== TRANSPLANT DENSITIES ===========================================
 =========================================================================================
>transplant_mtypes_densities_from_probability_map_correctednissl : Transplant neuron density nrrd files for the mtypes listed in the probability mapping csv file.
>transplant_mtypes_densities_from_profile_correctednissl : Transplant neuron density nrrd files for the mtypes listed in the probability mapping csv file.
>transplant_mtypes_densities_from_probability_map_l23split_correctednissl : Transplant neuron density nrrd files for the mtypes listed in the probability mapping csv file.
 =========================================================================================
 ======================== EXPORT MASKS,MESHES,SUMMARIES,CELLRECORDS ======================
 =========================================================================================
>export_brain_region_ccfv2_l23split : export a mesh, a volumetric mask and a region summary json file for every brain region available in the ccfv2 isocortex layer 2-3 split brain parcellation volume. Create a hierarchy JSONLD file from the input hierarchy JSON file as well. Note: not only the leaf regions are exported but also the above regions that are combinaisons of leaves
>export_brain_region_ccfv3_l23split : export a mesh, a volumetric mask and a region summary json file for every brain region available in the ccfv3 isocortex layer 2-3 split brain parcellation volume. Create a hierarchy JSONLD file from the input hierarchy JSON file as well. Note: not only the leaf regions are exported but also the above regions that are combinaisons of leaves
>cell_records_hybrid : Generate 3D cell records for the whole mouse brain and save them with the orientations and the region_ID in an hdf5 file. OUTDATED
 =========================================================================================
 ====================== ANNOTATION PIPELINE DATASET INTEGRITY CHECK ======================
 =========================================================================================
>check_annotation_pipeline_v2_volume_datasets : Check the integrity of the .nrrd volumetric datasets generated by the annotation pipeline
>check_annotation_pipeline_v3_volume_datasets : Check the integrity of the .nrrd volumetric datasets generated by the annotation pipeline
>check_annotation_pipeline_v2_mesh_datasets : Check the integrity of the annotation pipeline mesh datasets
>check_annotation_pipeline_v3_mesh_datasets : Check the integrity of the annotation pipeline mesh datasets
>check_annotation_pipeline_v2 : Verify that the report files generated by the module verifying the annotation pipeline datasets integrity do not contain any issues before starting to push datasets into Nexus. These are contained in the folder data_check_report.
>check_annotation_pipeline_v3 : Verify that the report files generated by the module verifying the annotation pipeline datasets integrity do not contain any issues before starting to push datasets into Nexus. These are contained in the folder data_check_report.
 =========================================================================================
 ============================= ANNOTATION PIPELINE USER RULES ============================
 =========================================================================================
>generate_annotation_pipeline_v2_datasets : Global rule to generate and check the integrity of every products of the annotation pipeline
>generate_annotation_pipeline_v3_datasets : Global rule to generate and check the integrity of every products of the annotation pipeline
>push_annotation_pipeline_v2_datasets : Global rule to generate, check and push into Nexus every products of the annotation pipeline.
 =========================================================================================
 ============================= CELL DENSITY PIPELINE USER RULES ============================
 =========================================================================================
>push_celldensity_transplant_pipeline_datasets : Global rule to generate and push into Nexus every products of the cell density pipeline
>push_celldensity_transplant_l23split_pipeline_datasets : Global rule to generate and push into Nexus every products of the cell density pipeline
