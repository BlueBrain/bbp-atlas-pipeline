image: python:3.7

include:
  - project: dke/apps/templates/job-templates
    file: job-templates.yml
  - project: cs/gitlabci-templates
    file: /build-image-using-kaniko.yml

stages:
  - unit-test
  - generate
  - deploy
  - convert_and_deployToBB5

# Generate documentation and stores the artifact under /generated/html

# Executes deployment of project documentation to bbp-dke-staging Openshift

# Executes deployment of project documentation to bbp-dke-staging Openshift

.deploy_rules:
  rules:
    - if: $CI_COMMIT_BRANCH == "master" && '$CI_COMMIT_TAG'
      when: on_success
      variables:
        CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE
        REGISTRY_IMAGE_TAG: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == "develop"
      when: on_success
      variables:
        CI_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE
        REGISTRY_IMAGE_TAG: dev

.add_staging_SSL:
  script:
    - CA_BUNDLE=$(python3 -c "import certifi; print(certifi.where())")
    - echo "$BBP_CA_CERT" >> $CA_BUNDLE
    - export SSL_CERT_FILE=$CA_BUNDLE

unit_test:
  stage: unit-test
  extends: .unit-tests
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  before_script:
    - pip install -r requirements.txt
  script:
    #- !reference [.add_staging_SSL, script]
    - !reference [.unit-tests, script]
  variables:
    SRC_PROJECT: '$CI_PROJECT_PATH'
    TEST_FOLDER: 'tests'
    NEXUS_STAGING_TOKEN: '$NEXUS_STAGING_TOKEN'

# Build image for pipeline
update-pipeline-image:
  stage: deploy
  extends: .build-image-using-kaniko
  rules:
    - !reference [.deploy_rules, rules]
  variables:
    BUILD_PATH: $CI_PROJECT_DIR
    KANIKO_EXTRA_ARGS: "--build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN --build-arg BBP_CA_CERT='$BBP_CA_CERT'"
    KUBERNETES_MEMORY_LIMIT: 4Gi
    KUBERNETES_MEMORY_REQUEST: 4Gi
  before_script:
    - export IFS=''

convert_and_deploy_job:
  stage:
    convert_and_deployToBB5
  rules:
    - !reference [.deploy_rules, rules]
  needs:
    - update-pipeline-image
  when: on_success
  tags:
    - bb5_map
  variables:
    bb5_constraint: nvme
    bb5_cpus_per_task: 2
    bb5_memory: 4G
    bb5_duration: "10:00"
  script:
    - bash convert_singularity_image.sh
